# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, 2018, Flatpak Team. Licensed under Creative Commons
# Attribution 4.0 International License.
# This file is distributed under the same license as the Flatpak package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
# TingPing <tingping@tingping.se>, 2018. #zanata
msgid ""
msgstr ""
"Project-Id-Version:  Flatpak\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-10 10:17+0800\n"
"PO-Revision-Date: 2018-05-20 10:37-0400\n"
"Last-Translator: Copied by Zanata <copied-by-zanata@zanata.org>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../sandbox-permissions.rst:2
msgid "Sandbox Permissions"
msgstr ""

#: ../../sandbox-permissions.rst:4
msgid ""
"One of Flatpak's main goals is to increase the security of desktop "
"systems by isolating applications from one another. This is achieved "
"using sandboxing and means that, by default, applications that are run "
"with Flatpak have extremely limited access to the host environment. This "
"includes:"
msgstr ""

#: ../../sandbox-permissions.rst:9
msgid ""
"No access to any host files except the runtime, the app, "
"``~/.var/app/$FLATPAK_ID``, and ``$XDG_RUNTIME_DIR/app/$FLATPAK_ID``. "
"Only the latter two being writable."
msgstr ""

#: ../../sandbox-permissions.rst:12
msgid "No access to the network."
msgstr ""

#: ../../sandbox-permissions.rst:13
msgid "No access to any device nodes (apart from ``/dev/null``, etc)."
msgstr ""

#: ../../sandbox-permissions.rst:14
msgid "No access to processes outside the sandbox."
msgstr ""

#: ../../sandbox-permissions.rst:15
msgid ""
"Limited syscalls.  For instance, apps can't use nonstandard network "
"socket types or ptrace other processes."
msgstr ""

#: ../../sandbox-permissions.rst:17
msgid ""
"Limited access to the session D-Bus instance - an app can only own its "
"own name on the bus."
msgstr ""

#: ../../sandbox-permissions.rst:19
msgid "No access to host services like X11, system D-Bus, or PulseAudio."
msgstr ""

#: ../../sandbox-permissions.rst:21
msgid ""
"Most applications will need access to some of these resources in order to"
" be useful. This is primarily done during the finishing build stage, "
"which can be configured through the ``finish-args`` section of the "
"manifest file (see :doc:`manifests`)."
msgstr ""

#: ../../sandbox-permissions.rst:27
msgid "Portals"
msgstr ""

#: ../../sandbox-permissions.rst:29
msgid ""
"Portals have already been mentioned in :doc:`basic-concepts`. They are a "
"framework for providing access to resources outside of the sandbox, "
"including:"
msgstr ""

#: ../../sandbox-permissions.rst:32
msgid "Opening files with a native file chooser dialog"
msgstr ""

#: ../../sandbox-permissions.rst:33
msgid "Opening URIs"
msgstr ""

#: ../../sandbox-permissions.rst:34
msgid "Printing"
msgstr ""

#: ../../sandbox-permissions.rst:35
msgid "Showing notifications"
msgstr ""

#: ../../sandbox-permissions.rst:36
msgid "Taking screenshots"
msgstr ""

#: ../../sandbox-permissions.rst:37
msgid ""
"Inhibiting the user session from ending, suspending, idling or getting "
"switched away"
msgstr ""

#: ../../sandbox-permissions.rst:39
msgid "Getting network status information"
msgstr ""

#: ../../sandbox-permissions.rst:41
msgid ""
"In many cases, portals use a system component to implicitly ask the user "
"for permission before granting access to a particular resource. For "
"example, in the case of opening a file, the user's selection of a file "
"using the file chooser dialog is interpreted as implicitly granting the "
"application access to whatever file is chosen."
msgstr ""

#: ../../sandbox-permissions.rst:47
msgid ""
"This approach enables applications to avoid having to configure blanket "
"access to large amounts of data or services and gives users control over "
"what their applications have access to."
msgstr ""

#: ../../sandbox-permissions.rst:51
msgid ""
"Interface toolkits like GTK3 and Qt5 implement transparent support for "
"portals, meaning that applications don't need to do any additional work "
"to use them (it is worth checking which portals each toolkit supports). "
"Applications that aren't using a toolkit with support for portals can "
"refer to the `xdg-desktop-portal API documentation "
"<https://flatpak.github.io/xdg-desktop-portal/portal-docs.html>`_ for "
"information on how to use them."
msgstr ""

#: ../../sandbox-permissions.rst:60
msgid "Permissions guidelines"
msgstr ""

#: ../../sandbox-permissions.rst:62
msgid ""
"While application developers have control over the sandbox permissions "
"they wish to configure, good practice is encouraged and can be enforced. "
"For example, the Flathub hosting service places requirements on which "
"permissions can be used, and software on the host may warn users if "
"certain permissions are used."
msgstr ""

#: ../../sandbox-permissions.rst:68
msgid ""
"The following guidelines describe which permissions can be freely used, "
"which can be used on an as-needed basis, and which should be avoided."
msgstr ""

#: ../../sandbox-permissions.rst:72
msgid "Standard permissions"
msgstr ""

#: ../../sandbox-permissions.rst:74
msgid ""
"The following permissions provide access to basic resources that "
"applications commonly require, and can therefore be freely used:"
msgstr ""

#: ../../sandbox-permissions.rst:77
msgid "``--share=network`` - access the network"
msgstr ""

#: ../../sandbox-permissions.rst:78
msgid "``--socket=x11`` - show windows using X11"
msgstr ""

#: ../../sandbox-permissions.rst:79
msgid ""
"``--socket=fallback-x11`` - show windows using X11, if Wayland is not "
"available, overrides ``x11`` socket permission. Note that you must still "
"use ``--socket=wayland`` for wayland permission"
msgstr ""

#: ../../sandbox-permissions.rst:82
msgid "``--share=ipc`` - share IPC namespace with the host (necessary for X11)"
msgstr ""

#: ../../sandbox-permissions.rst:83
msgid "``--socket=wayland`` - show windows with Wayland"
msgstr ""

#: ../../sandbox-permissions.rst:84
msgid "``--device=dri`` - OpenGL rendering"
msgstr ""

#: ../../sandbox-permissions.rst:85
msgid "``--socket=pulseaudio`` - play sound with PulseAudio"
msgstr ""

#: ../../sandbox-permissions.rst:88
msgid "D-Bus access"
msgstr ""

#: ../../sandbox-permissions.rst:90
msgid ""
"Access to the entire bus with ``--socket=system-bus`` or ``--socket"
"=session-bus`` should be avoided, unless the application is a development"
" tool."
msgstr ""

#: ../../sandbox-permissions.rst:94
msgid "**Ownership**"
msgstr ""

#: ../../sandbox-permissions.rst:96
msgid ""
"Applications are automatically granted access to their own namespace. "
"Ownership beyond this is typically unnecessary, although there are a "
"small number of exceptions, such as using `MPRIS to provide media "
"controls <https://www.freedesktop.org/wiki/Specifications/mpris-spec/>`_."
msgstr ""

#: ../../sandbox-permissions.rst:101
msgid "**Talk**"
msgstr ""

#: ../../sandbox-permissions.rst:103
msgid ""
"Talk permissions can be freely used, although it is recommended to use "
"the minimum required."
msgstr ""

#: ../../sandbox-permissions.rst:107
msgid "Filesystem access"
msgstr ""

#: ../../sandbox-permissions.rst:109
msgid ""
"It is common for applications to require access to different parts of the"
" host filesystem, and Flatpak provides a flexible set of options for "
"this. Some examples include:"
msgstr ""

#: ../../sandbox-permissions.rst:113
msgid ""
"``--filesystem=host`` - access normal files on the host, not including "
"host os or system internals described below"
msgstr ""

#: ../../sandbox-permissions.rst:115
msgid "``--filesystem=home`` - access the user's home directory"
msgstr ""

#: ../../sandbox-permissions.rst:116
msgid "``--filesystem=/path/path`` - access specific paths"
msgstr ""

#: ../../sandbox-permissions.rst:117
msgid "``--filesystem=xdg-download`` - access a specific XDG folder"
msgstr ""

#: ../../sandbox-permissions.rst:119
msgid ""
"As a general rule, Filesystem access should be limited as much as "
"possible. This includes:"
msgstr ""

#: ../../sandbox-permissions.rst:122
msgid ""
"Using portals as an alternative to blanket filesystem access, wherever "
"possible."
msgstr ""

#: ../../sandbox-permissions.rst:124
msgid "Using read-only access wherever possible, using the ``:ro`` option."
msgstr ""

#: ../../sandbox-permissions.rst:125
msgid ""
"If some home directory access is absolutely required, using XDG directory"
" access only."
msgstr ""

#: ../../sandbox-permissions.rst:128
msgid ""
"The full list of available filesystem options can be found in the :doc"
":`sandbox-permissions-reference`. Other filesystem access guidelines "
"include:"
msgstr ""

#: ../../sandbox-permissions.rst:132
msgid ""
"The ``--persist=path`` option can be used to map paths from the user's "
"home directory into the sandbox filesystem. This makes it possible to "
"avoid configuring access to the entire home directory, and can be useful "
"for applications that hardcode file paths in ``~/``."
msgstr ""

#: ../../sandbox-permissions.rst:137
msgid ""
"If an application uses ``$TMPDIR`` to contain lock files you may want to "
"add a wrapper script that sets it to "
"``$XDG_RUNTIME_DIR/app/$FLATPAK_ID``."
msgstr ""

#: ../../sandbox-permissions.rst:139
msgid ""
"Retaining and sharing configuration with non-Flatpak installations is to "
"be avoided."
msgstr ""

#: ../../sandbox-permissions.rst:142
msgid ""
"As mentioned above the ``host`` option does not actually provide complete"
" access to the host filesystem. The main rules are:"
msgstr ""

#: ../../sandbox-permissions.rst:146
msgid ""
"These directories are blacklisted: ``/lib``, ``/lib32``, ``/lib64``, "
"``/bin``, ``/sbin``, ``/usr``, ``/boot``, ``/root``, ``/tmp``, ``/etc``, "
"``/app``, ``/run``, ``/proc``, ``/sys``, ``/dev``, ``/var``"
msgstr ""

#: ../../sandbox-permissions.rst:150
msgid "Exceptions from the blacklist: ``/run/media``"
msgstr ""

#: ../../sandbox-permissions.rst:151
msgid "These directories are mounted under ``/var/run/host``: ``/etc``, ``/usr``"
msgstr ""

#: ../../sandbox-permissions.rst:153
msgid ""
"The reason many of the directories are blacklisted is because they "
"already exist in the sandbox such as ``/usr`` or are not usable in the "
"sandbox."
msgstr ""

#: ../../sandbox-permissions.rst:157
msgid ""
"The ``home`` permission also has exceptions as it does not grant access "
"to the subdirectories for other applications in ``~/.var/app/``."
msgstr ""

#: ../../sandbox-permissions.rst:161
msgid "Device access"
msgstr ""

#: ../../sandbox-permissions.rst:163
msgid ""
"While not ideal, ``--device=all`` can be used to access devices like "
"controllers or webcams."
msgstr ""

#: ../../sandbox-permissions.rst:167
msgid "dconf access"
msgstr ""

#: ../../sandbox-permissions.rst:169
msgid ""
"As of xdg-desktop-portal 1.1.0 and glib 2.60.5 (in the runtime) you do "
"not need direct DConf access in most cases."
msgstr ""

#: ../../sandbox-permissions.rst:172
msgid ""
"As of now this glib version is included in "
"``org.freedesktop.Platform//19.08`` and ``org.gnome.Platform//3.34`` and "
"newer."
msgstr ""

#: ../../sandbox-permissions.rst:175
msgid ""
"If an application existed prior to these runtimes you can tell Flatpak "
"(>= 1.3.4) to migrate the DConf settings on the host into the sandbox by "
"adding ``--metadata=X-DConf=migrate-path=/org/example/foo/`` to ``finish-"
"args``. The path must be similar to your app-id or it will not be allowed"
" (case is ignored and ``_`` and ``-`` are treated equal)."
msgstr ""

#: ../../sandbox-permissions.rst:182
msgid ""
"If you are targeting older runtimes or require direct DConf access for "
"other reasons you can use these permissions::"
msgstr ""

#: ../../sandbox-permissions.rst:190
msgid "With those permissions glib will continue using dconf directly."
msgstr ""

#: ../../sandbox-permissions.rst:192
msgid ""
"If you use a newer runtime where dconf is no longer built and still need "
"it you will have to build the `dconf "
"<https://download.gnome.org/sources/dconf/>`_ GIO module and set "
"``--env=GIO_EXTRA_MODULES=/app/lib/gio/modules/``."
msgstr ""

#: ../../sandbox-permissions.rst:197
msgid "gvfs access"
msgstr ""

#: ../../sandbox-permissions.rst:199
msgid ""
"As of gvfs 1.48, the gvfs daemons and applications use an on-disk socket "
"to communicate, rather than an abstract socket so that the gvfs "
"infrastructure still works when network support is disabled in the "
"application's sandbox."
msgstr ""

#: ../../sandbox-permissions.rst:203
msgid ""
"A number of different options need to be passed depending on the "
"application's use of gvfs."
msgstr ""

#: ../../sandbox-permissions.rst:206
msgid ""
"``--talk-name=org.gtk.vfs.*`` is necessary to talk to the gvfs daemons "
"over D-Bus and list mounts using the GIO APIs."
msgstr ""

#: ../../sandbox-permissions.rst:209
msgid ""
"``--filesystem=xdg-run/gvfsd`` is necessary to use the GIO APIs to list "
"and access non-native files using the GIO APIs, using URLs rather than "
"FUSE paths."
msgstr ""

#: ../../sandbox-permissions.rst:212
msgid ""
"``--filesystem=xdg-run/gvfs`` is necessary to give access to the FUSE "
"mounts non-GIO and legacy applications can use. This is what will make "
"native files appear under ``/run/user/`id -u`/gvfs/``."
msgstr ""

#: ../../sandbox-permissions.rst:216
msgid "Typical GNOME and GTK applications should use::"
msgstr ""

#: ../../sandbox-permissions.rst:221
msgid "Typical non-GNOME and non-GTK applications should use::"
msgstr ""

#: ../../sandbox-permissions.rst:225
msgid ""
"No application should be using ``--talk-name=org.gtk.vfs`` in its "
"manifest, as there are no D-Bus services named ``org.gtk.vfs``."
msgstr ""

#~ msgid ""
#~ "No access to any host files except"
#~ " the runtime, the app and "
#~ "``~/.var/app/$APPID``. Only the last of "
#~ "these is writable."
#~ msgstr ""

#~ msgid ""
#~ "Portals have already been mentioned in"
#~ " the :doc:`introduction`. They are a "
#~ "framework for providing access to "
#~ "resources outside of the sandbox, "
#~ "including:"
#~ msgstr ""

#~ msgid ""
#~ "Interface toolkits like GTK3 and Qt5 "
#~ "implement transparent support for portals, "
#~ "meaning that applications don't need to"
#~ " any additional work to use them "
#~ "(it is worth checking which portals "
#~ "each toolkit supports). Applications that "
#~ "aren't using a toolkit with support "
#~ "for portals can refer to the "
#~ "`xdg-desktop-portal API documentation "
#~ "<https://flatpak.github.io/xdg-desktop-portal/portal-"
#~ "docs.html>`_ for information on how to"
#~ " use them."
#~ msgstr ""

#~ msgid ""
#~ "``--socket=fallback-x11`` - show windows using"
#~ " X11, if Wayland is not available"
#~ msgstr ""

#~ msgid ""
#~ "Talk permissions can be freely used, "
#~ "although it is recommended to use "
#~ "the minumum required."
#~ msgstr ""

#~ msgid ""
#~ "It is common for applications to "
#~ "require access to different parts of "
#~ "the host filesystem,and Flatpak provides "
#~ "a flexible set of options for "
#~ "this. Some examples include:"
#~ msgstr ""

#~ msgid ""
#~ "As a general rule, Filesystem access "
#~ "should be limited as much as "
#~ "possible. This includes using:"
#~ msgstr ""

#~ msgid ""
#~ "The full list the available filesystem"
#~ " options can be found in the "
#~ ":doc:`sandbox-permissions-reference`. Other "
#~ "filesystem access guidelines include:"
#~ msgstr ""

#~ msgid ""
#~ "If an application uses ``$TMPDIR`` to"
#~ " contain lock files or shared files"
#~ " with other processes, you may want"
#~ " to add ``--env=TMPDIR=/var/tmp``."
#~ msgstr ""

#~ msgid ""
#~ "Until a sandbox-compatible backend is"
#~ " available, applications that require "
#~ "access to dconf can do so with "
#~ "the following options::"
#~ msgstr ""

#~ msgid ""
#~ "``--socket=fallback-x11`` - show windows using"
#~ " X11, if Wayland is not available,"
#~ " overrides ``x11`` socket permission"
#~ msgstr ""

